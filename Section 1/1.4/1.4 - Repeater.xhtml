<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><!--This file was converted to xhtml by LibreOffice - see http://cgit.freedesktop.org/libreoffice/core/tree/filter/source/xslt for the code.--><head profile="http://dublincore.org/documents/dcmi-terms/"><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/><title xml:lang="en-US">- no title specified</title><meta name="DCTERMS.title" content="" xml:lang="en-US"/><meta name="DCTERMS.language" content="en-US" scheme="DCTERMS.RFC4646"/><meta name="DCTERMS.source" content="http://xml.openoffice.org/odf2xhtml"/><meta name="DCTERMS.issued" content="2009-04-16T11:32:02.64" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.modified" content="2017-03-20T10:39:56.481000000" scheme="DCTERMS.W3CDTF"/><meta name="DCTERMS.provenance" content="" xml:lang="en-US"/><meta name="DCTERMS.subject" content="," xml:lang="en-US"/><link rel="schema.DC" href="http://purl.org/dc/elements/1.1/" hreflang="en"/><link rel="schema.DCTERMS" href="http://purl.org/dc/terms/" hreflang="en"/><link rel="schema.DCTYPE" href="http://purl.org/dc/dcmitype/" hreflang="en"/><link rel="schema.DCAM" href="http://purl.org/dc/dcam/" hreflang="en"/><style type="text/css">
	@page {  }
	table { border-collapse:collapse; border-spacing:0; empty-cells:show }
	td, th { vertical-align:top; font-size:12pt;}
	h1, h2, h3, h4, h5, h6 { clear:both }
	ol, ul { margin:0; padding:0;}
	li { list-style: none; margin:0; padding:0;}
	<!-- "li span.odfLiEnd" - IE 7 issue-->
	li span. { clear: both; line-height:0; width:0; height:0; margin:0; padding:0; }
	span.footnodeNumber { padding-right:1em; }
	span.annotation_style_by_filter { font-size:95%; font-family:Arial; background-color:#fff000;  margin:0; border:0; padding:0;  }
	* { margin:0;}
	.Heading { font-size:14pt; font-family:Arial; writing-mode:page; margin-top:0.1665in; margin-bottom:0.0835in; }
	.P1 { font-size:12pt; margin-bottom:0.0835in; margin-top:0in; font-family:Times New Roman; writing-mode:page; }
	.P2 { font-size:12pt; margin-bottom:0.0835in; margin-top:0in; font-family:Times New Roman; writing-mode:page; }
	.P3 { font-size:12pt; margin-bottom:0.0835in; margin-top:0in; font-family:Times New Roman; writing-mode:page; }
	.P4 { font-size:12pt; margin-bottom:0.0835in; margin-top:0in; font-family:Times New Roman; writing-mode:page; }
	.P5 { font-size:12pt; margin-bottom:0.0835in; margin-top:0in; font-family:Times New Roman; writing-mode:page; }
	.P6 { font-size:12pt; margin-bottom:0in; margin-top:0in; font-family:Courier New; writing-mode:page; color:#000000; letter-spacing:normal; }
	.P7 { font-size:12pt; margin-bottom:0.1965in; margin-top:0in; font-family:Courier New; writing-mode:page; color:#000000; letter-spacing:normal; font-style:normal; font-weight:normal; }
	.P8 { font-size:28pt; font-weight:bold; margin-bottom:0.0835in; margin-top:0.1665in; text-align:center ! important; font-family:Arial; writing-mode:page; }
	.T1 { font-style:normal; font-weight:normal; }
	.T10 { color:#006699; font-style:normal; font-weight:normal; }
	.T2 { color:#000000; font-family:Courier New; font-size:12pt; letter-spacing:normal; font-style:normal; font-weight:normal; }
	.T3 { color:#0066ff; font-family:Courier New; font-size:12pt; letter-spacing:normal; font-style:normal; font-weight:normal; }
	.T4 { color:#669900; font-family:Courier New; font-size:12pt; letter-spacing:normal; font-style:normal; font-weight:normal; }
	.T5 { font-size:12pt; }
	.T6 { color:#0066ff; font-style:normal; font-weight:normal; }
	.T7 { color:#669900; font-style:normal; font-weight:normal; }
	.T8 { color:#ff9900; font-style:normal; font-weight:normal; }
	.T9 { color:#ff9900; font-style:normal; font-weight:normal; background-color:transparent; }
	<!-- ODF styles with no properties representable as CSS -->
	.T11 .T12 .T13  { }
	</style></head><body dir="ltr" style="max-width:8.5in;margin-top:0.7874in; margin-bottom:0.7874in; margin-left:0.7874in; margin-right:0.7874in; "><p class="P8">Serial Communications Repeater</p><p class="P1"> </p><p class="P2"><span class="T5">Open the included code file 'Reapeter.ino'.This sketch is designed to listen to any messages written to the serial line from Arduino Serial Monitor; if any are detected, the Arduino will repeat that message back the serial line and it will be displayed on the monitor. Test this process by uploading the program to your Arduino, and then typing some message into the Serial Monitor as shown below. </span></p><p class="Heading">Part 1 – Code Walkthrough<br/></p><p class="P2"><span class="T3">void</span><span class="T2"> </span><span class="T4">setup</span><span class="T2">() {  </span></p><p class="P6">  <span class="T8">Serial.begin</span><span class="T1">(9600);</span></p><p class="P6">  <span class="T7">while</span><span class="T1"> (!</span><span class="T8">Serial</span><span class="T1">) {}</span></p><p class="P6">  <span class="T8">Serial.println</span><span class="T1">(</span><span class="T10">"Staring Serial Repeater"</span><span class="T1">);</span></p><p class="P7">}</p><p class="P3"><span class="T11">The setup function starts by initializaing a Serial connection at 9600 baud. Next, it waits until the Serial port is ready. Finally, it prints a message to be displayed by the Serial Monitor showing the device has started. <br/><br/></span><span class="T3">void</span><span class="T2"> </span><span class="T4">loop</span><span class="T2">() { </span></p><p class="P6">  <span class="T1">if(</span><span class="T9">Serial.available</span><span class="T1">() &gt; 0 ){   </span></p><p class="P6">    <span class="T6">String</span><span class="T1"> message = serialMessage();</span></p><p class="P6">    <span class="T8">Serial.println</span><span class="T1">(message);</span></p><p class="P6">  <span class="T1">}</span></p><p class="P7">}</p><p class="P4"><span class="T12">The loop function continually checks the serial buffer using Serial.available to see if how many characters are in the buffer. If that number is more than zero, it calls the serialMessage() function those characters out. It those characters to a variable called message. It writes that message back to the serial line using Serial.println(). <br/><br/></span><span class="T3">String</span><span class="T2"> serialMessage(){</span></p><p class="P6">  <span class="T6">String</span><span class="T1"> message = </span><span class="T10">""</span><span class="T1">;</span></p><p class="P6">   <span class="T7">while</span><span class="T1">(</span><span class="T8">Serial.available</span><span class="T1">() &gt; 0) {</span></p><p class="P6">      <span class="T1">message += </span><span class="T6">char</span><span class="T1">(Serial.read());</span></p><p class="P6">      <span class="T8">delay</span><span class="T1">(5);</span></p><p class="P6">    <span class="T1">}</span></p><p class="P6">    <span class="T7">return</span><span class="T1"> message;</span></p><p class="P7">}</p><p class="P5">The serialMessage funciton starts by creating a new <span class="T13">empty string called message. Next, it loops over all </span>the available characters out of the serial buffer and adds them to <span class="T13">the message varaiable. It waits 5 milliseconds between reading each character. Finally, it returns that message.</span> </p></body></html>